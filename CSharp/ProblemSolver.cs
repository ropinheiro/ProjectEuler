namespace ProjectEuler
{
    public static class ProblemSolver
    {
        /// <summary>
        /// -------------------------------------------------------------------
        /// Problem 1
        /// Multiples of 3 or 5
        /// -------------------------------------------------------------------
        /// If we list all the natural numbers below 10 that are multiples of
        /// 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
        /// Find the sum of all the multiples of 3 or 5 below 1000.
        /// -------------------------------------------------------------------
        /// </summary>
        /// <returns>Solution for Project Euler #1</returns>
        public static int SolveProblem0001()
        {
            int sum = 0;
            for (int i = 1; i < 1000; i++)
            {
                if (i % 3 == 0 || i % 5 == 0)
                {
                    sum += i;
                }
            }
            return sum;
        }

        /// <summary>
        /// -------------------------------------------------------------------
        /// Problem 2
        /// Even Fibonacci numbers
        /// -------------------------------------------------------------------
        /// Each new term in the Fibonacci sequence is generated by adding the
        /// previous two terms. By starting with 1 and 2, the first 10 terms
        /// will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        /// By considering the terms in the Fibonacci sequence whose values do
        /// not exceed four million, find the sum of the even-valued terms.
        /// -------------------------------------------------------------------
        /// </summary>
        /// <returns>Solution for Project Euler #2</returns>
        public static int SolveProblem0002()
        {
            int sum = 0;
            int previousValue1 = 0;
            int previousValue2 = 1;
            int currentValue = previousValue1 + previousValue2;

            while (currentValue < 4000000)
            {
                if (currentValue % 2 == 0)
                {
                    sum += currentValue;
                }

                previousValue1 = previousValue2;
                previousValue2 = currentValue;
                currentValue = previousValue1 + previousValue2;
            }

            return sum;
        }
    }
}