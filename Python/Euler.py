from utils import isPrime, writeResult;

# -------------------------------------------------------------------
# Problem Solvers
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Problem 1
# Multiples of 3 or 5
# -------------------------------------------------------------------
# If we list all the natural numbers below 10 that are multiples of
# 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.
# -------------------------------------------------------------------
# Returns: Solution for Project Euler #1
# -------------------------------------------------------------------
def solveProblem0001():
    sum = 0;
    for i in range(1000):
        if i % 3 == 0 or i % 5 == 0:
            sum += i;
    return sum;

# -------------------------------------------------------------------
# Problem 2
# Even Fibonacci numbers
# -------------------------------------------------------------------
# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms
# will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.
# -------------------------------------------------------------------
# Returns: Solution for Project Euler #2
# -------------------------------------------------------------------
def solveProblem0002():
    sum = 0;
    previousValue1 = 0;
    previousValue2 = 1;
    currentValue = previousValue1 + previousValue2;

    while currentValue < 4000000:
        if currentValue % 2 == 0:
            sum += currentValue;
        previousValue1 = previousValue2;
        previousValue2 = currentValue;
        currentValue = previousValue1 + previousValue2;

    return sum;

# -------------------------------------------------------------------
# Problem 3
# Largest prime factor
# -------------------------------------------------------------------
# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?
# Note: see strategy details in the C# version
# -------------------------------------------------------------------
# Returns: Solution for Project Euler #3
# -------------------------------------------------------------------
def solveProblem0003():
    number = 600851475143;
 
    minorDivisibleNumber = 7;
    stopAt = 10000;
    while number % minorDivisibleNumber != 0 and minorDivisibleNumber <= stopAt:
        minorDivisibleNumber = minorDivisibleNumber + 2;

    currentTentative = number / minorDivisibleNumber;

    if currentTentative % 2 == 0:
        currentTentative -= 1;

    skipFives = currentTentative % 5;

    if skipFives == 0:
        currentTentative = currentTentative - 2;
        skipFives = 4;
    else:
        if skipFives == 1:
            skipFives = 3;
        elif skipFives == 2:
            skipFives = 1;
        elif skipFives == 3:
            skipFives = 4;
        elif skipFives == 4:
            skipFives = 2;

    while number % currentTentative != 0 or isPrime(currentTentative) == False:
        currentTentative = currentTentative - 2;
        skipFives = skipFives - 1;
        if skipFives == 0:
            currentTentative = currentTentative - 2;
            skipFives = 4;

    return currentTentative;

# -------------------------------------------------------------------
# Main
# -------------------------------------------------------------------
print("===================================");
print("Results for Euler Project problems:");
print("-----------------------------------");

writeResult(1, solveProblem0001());
writeResult(2, solveProblem0002());
# writeResult(3, solveProblem0003()); # SLOW!
# Further problem solvers go here.

print("===================================");
